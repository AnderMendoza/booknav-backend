openapi: 3.0.1
info:
  title: supadoc-backend
  description: Supadoc api
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification
paths:
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Examples
      description: Create a new example
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExampleBody"
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /examples/{id}:
    get:
      tags:
        - Examples
      parameters:
        - name: id
          in: path
          description: The id of the example to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
  /user/login:
    post:
      tags:
        - Login
      description: login user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/otp:
    post:
      tags:
        - Login OTP
      description: login user with OTP
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/verify:
    get:
      tags:
        - Verify User
      description: Verify user
      responses:
        202:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/refresh:
    get:
      tags:
        - Refresh token
      description: Refresh token user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/logout:
    get:
      tags:
        - loout User
      description: Logout user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/all:
    get:
      tags:
        - Give all users
      description: Return all users
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/me:
    get:
      tags:
        - Logged in User
      description: LoggedIn user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/register:
    post:
      tags:
        - Register
      description: Register user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /doctor:
    post:
      tags:
        - Add doctor
      description: Add doc
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - Update doctor
      description: Update doc
      responses:
        200:
          description: Update the doctor with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /doctor/{id}:
    get:
      tags:
        - Doctor get
      parameters:
        - name: id
          in: path
          description: The id of the doctor to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the doctor with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Doctor delete
      parameters:
        - name: id
          in: path
          description: The id of the doctor to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the deleted doctor with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /task:
    post:
      tags:
        - Add task
      description: Add doc
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - Updatetask
      description: Update doc
      responses:
        200:
          description: Update the task with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /task/{id}:
    get:
      tags:
        - task get
      parameters:
        - name: id
          in: path
          description: The id of the task to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the task with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - task delete
      parameters:
        - name: id
          in: path
          description: The id of the task to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the deleted task with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Error:
      type: object
      additionalProperties: true

    ExampleBody:
      title: example
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: no_stress
