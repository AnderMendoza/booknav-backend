openapi: 3.0.1
info:
  title: booknav-backend
  description: booknav api
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Specification
    description: The swagger API specification
paths:
  /users/login:
    post:
      tags:
        - Login
      description: login user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/otp:
    post:
      tags:
        - Login OTP
      description: login user with OTP
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/verify:
    get:
      tags:
        - Verify User
      description: Verify user
      responses:
        202:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/refresh:
    post:
      tags:
        - Refresh token
      description: Refresh token user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/logout:
    get:
      tags:
        - Logout User
      description: Logout user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/all:
    get:
      tags:
        - Give all users
      description: Return all users
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/me:
    get:
      tags:
        - Logged in User
      description: LoggedIn user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/register:
    post:
      tags:
        - Register
      description: Register user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/google-signin:
    post:
      tags:
        - Google signin
      description: Google signin
      responses:
        200:
          description: Return login access and refresh token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Incorrect post data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /naavTypes/all:
    get:
      tags:
        - Give all naavTypes
      description: Return all naavTypes
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /naavTypes/{id}:
    get:
      tags:
        - Give naavType
      description: Return naavType
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - Update naavType
      description: Update naavType
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Delete naavType
      description: Delete naavType
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /naavTypes:
    post:
      tags:
        - Create naavType
      description: Create naavType
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Error:
      type: object
      additionalProperties: true

    ExampleBody:
      title: example
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: no_stress
