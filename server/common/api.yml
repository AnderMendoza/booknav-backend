openapi: 3.0.1
info:
  title: booknaav-backend
  description: backend for booknaav app in typescipt
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Specification
    description: The swagger API specification
paths:
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}

  /users/otp:
    post:
      tags:
        - Login OTP
      description: login user with OTP
      requestBody:
        description: Send OTP to login user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/verify:
    post:
      tags:
        - Verify User
      description: Verify user
      requestBody:
        description: Verify login with otp
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyUserBody'
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/refresh:
    post:
      tags:
        - Refresh token
      description: Refresh token user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/logout:
    get:
      security:
        - bearerAuth: []
      tags:
        - Logout User
      description: Logout user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/all:
    get:
      security:
        - bearerAuth: []
      tags:
        - Give all users
      description: Return all users
      responses:
        200:
          description: Return all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/me:
    get:
      security:
        - bearerAuth: []
      tags:
        - Logged in User
      description: LoggedIn user
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/update:
    post:
      security:
        - bearerAuth: []
      tags:
        - Update logged in user
      description: Update logged in user
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUserBody'

      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/register:
    post:
      tags:
        - Register
      description: Register user
      requestBody:
        description: Register user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /ghat:
    get:
      security:
        - bearerAuth: []
      tags:
        - Ghat
      description: Return all ghat
      responses:
        200:
          description: Return all ghat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ghat/file:
    post:
      security:
        - bearerAuth: []
      tags:
        - Ghat
      description: Create ghat
      requestBody:
        description: Create ghat
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GhatBody'
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ghat/{id}:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the ghat to get
      security:
        - bearerAuth: []
      tags:
        - Ghat
      description: Return ghat with the specified id
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the ghat to delete
      security:
        - bearerAuth: []
      tags:
        - Ghat
      description: Delete ghat with the specified id
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ghat/{id}/file:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the ghat to update
      security:
        - bearerAuth: []
      tags:
        - Ghat
      description: Update ghat with the specified id
      requestBody:
        description: Update ghat with the specified id
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GhatBody'
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /naav:
    get:
      parameters:
        - in: query
          name: boatTypeId
          schema:
            type: string
        - in: query
          name: ghatId
          schema:
            type: string
        - in: query
          name: isPublished
          schema:
            type: boolean
      security:
        - bearerAuth: []
      tags:
        - Naav
      description: Return all naav
      responses:
        200:
          description: Return all naav
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /naav/file:
    post:
      security:
        - bearerAuth: []
      tags:
        - Naav
      description: Create naav
      requestBody:
        description: Create naav
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NaavBody'
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /naav/{id}:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the  naav to get
      security:
        - bearerAuth: []
      tags:
        - Naav
      description: Return  naav with the specified id
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the  naav to delete
      security:
        - bearerAuth: []
      tags:
        - Naav
      description: Delete  naav with the specified id
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /naav/{id}/file:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the  naav to update
      security:
        - bearerAuth: []
      tags:
        - Naav
      description: Update  naav with the specified id
      requestBody:
        description: Update  naav with the specified id
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NaavBody'
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /naav/{id}/status:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the  naav to update
      security:
        - bearerAuth: []
      tags:
        - Naav
      description: Update naav with the specified id
      requestBody:
        description: Update  naav with the specified id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NaavStatusBody'
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /boat-type:
    get:
      security:
        - bearerAuth: []
      tags:
        - BoatType
      description: Return all boat type
      responses:
        200:
          description: Return all boat type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      security:
        - bearerAuth: []
      tags:
        - BoatType
      description: Create boat type
      requestBody:
        description: Create boat type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoatTypeBody'
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /boat-type/{id}:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the boat type to get
      security:
        - bearerAuth: []
      tags:
        - BoatType
      description: Return boat type with the specified id
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the boat type to update
      security:
        - bearerAuth: []
      tags:
        - BoatType
      description: Update boat type with the specified id
      requestBody:
        description: Update boat type with the specified id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoatTypeBody'
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the boat type to delete
      security:
        - bearerAuth: []
      tags:
        - BoatType
      description: Delete boat type with the specified id
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Example'
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Error:
      type: object
      additionalProperties: true

    UpdateUserBody:
      type: object
      properties:
        name:
          type: string
          example: example 3
        phone:
          type: string
          example: example 3
        picture:
          type: string
          example: example 3

    ExampleBody:
      title: example
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: no_stress

    RegisterBody:
      title: register
      required:
        - title
        - phone
      type: object
      properties:
        title:
          type: string
          example: no_stress
        phone:
          type: string
          example: +919012345678

    LoginBody:
      title: login
      required:
        - phone
      type: object
      properties:
        phone:
          type: string
          example: +62812341234

    VerifyUserBody:
      title: verify user
      required:
        - phone
        - otp
        - hash
      type: object
      properties:
        hash:
          type: string
          example: hash
        phone:
          type: string
          example: +62812341234
        otp:
          type: string
          example: 123456

    Location:
      type: object
      properties:
        lat:
          type: number
          example: -6.2
        lng:
          type: number
          example: 106.8

    GhatBody:
      title: Ghat add
      required:
        - title
      type: object
      properties:
        title:
          type: string
          example: no_stress
        description:
          type: string
          example: no_stress
        picture:
          type: string
          format: binary
          example: picture
        location:
          $ref: '#/components/schemas/Location'

    BoatTypeBody:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          example: example 3

    NaavBody:
      type: object
      required:
        - boatType
        - ghat
        - price
        - capacity
      properties:
        boatType:
          type: string
          example: 3
        ghat:
          type: string
          example: 3
        title:
          type: string
          example: example 3
        description:
          type: string
          example: example 3
        picture:
          type: string
          format: binary
          example: picture
        price:
          type: number
          example: 3
        capacity:
          type: number
          example: 3
        isPublished:
          type: boolean
          example: false

    NaavStatusBody:
      type: object
      required:
        - isPublished
      properties:
        isPublished:
          type: boolean
          example: false
